openapi: 3.0.0
info:
  title: jobs api express js
  contact: {}
  version: '1.0'
servers:
- url: https://job-api-06-1.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerrequest'
            example:
              email: voke@mail.com
              password: '1234'
            
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginrequest'
            example:
              email: voke@mail.com
              password: '1234'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerrequest'
            example:
              status: pending
              company: company name
              position:
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
        - bearer: []
    get:
      tags:
      - Jobs
      summary: get jobs
      operationId: getjobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID.
    get:
      tags:
      - Jobs
      summary: get single job
      operationId: getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: update jobs
      operationId: updatejobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatejobsrequest'
            example:
              company: voke
              position: fullstack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The user ID.
    delete:
      tags:
      - Jobs
      summary: delete job
      description: ''
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          content:
            javascript/json:
              schema:
                type: string
      deprecated: false
       security:
           - bearer: []
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: voke@mail.com
        password: '1234'
    loginrequest:
      title: loginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: voke@mail.com
        password: '1234'
    updatejobsrequest:
      title: updatejobsrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: voke
        position: fullstack developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''